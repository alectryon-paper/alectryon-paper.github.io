{
  "metadata": {
    "sertop_args": [
      "-R",
      "/build/coq/frap.8.10.2/,Frap"
    ],
    "cache_version": "1"
  },
  "chunks": [
    "Require Import Frap.Frap.\n\nSet Implicit Arguments.\nSet Asymmetric Patterns.\nSet Printing Depth 1.",
    "Inductive isEven : nat -> Prop :=\n| Even_O : isEven O\n| Even_SS : forall n, isEven n -> isEven (S (S n)).\n\nLtac prove_even := repeat constructor.\n\nTheorem even_256 : isEven 256.\n  prove_even.\nQed.\n\nSet Printing All. (* .none *)\nPrint even_256. (* .unfold *)\nUnset Printing All. (* .none *)",
    "Fixpoint check_even (n : nat) : bool :=\n  match n with\n  | 0 => true\n  | 1 => false\n  | S (S n') => check_even n'\n  end.",
    "Lemma check_even_ok' : forall n n', n' < n\n  -> if check_even n' then isEven n' else ~isEven n'.\n  induct n; simplify.\n\n  linear_arithmetic.\n\n  cases n'; simplify.\n  constructor.\n  cases n'; simplify.\n  propositional.\n  invert H0.\n  specialize (IHn n').\n  cases (check_even n').\n  constructor.\n  apply IHn.\n  linear_arithmetic.\n  propositional.\n  invert H0.\n  apply IHn.\n  linear_arithmetic.\n  assumption.\nQed.",
    "Theorem check_even_ok : forall n, check_even n = true -> isEven n.\n  simplify.\n  assert (n < S n) by linear_arithmetic.\n  apply check_even_ok' in H0.\n  rewrite H in H0.\n  assumption.\nQed.",
    "Ltac prove_even_reflective :=\n  match goal with\n    | [ |- isEven ?N] => apply check_even_ok; reflexivity\n  end.\n\nTheorem even_256' : isEven 256.\n  prove_even_reflective.\nQed.\n\nSet Printing All. (* .none *)\nPrint even_256'. (* .unfold *)\nUnset Printing All. (* .none *)",
    "Theorem even_255 : isEven 255.\nFail prove_even_reflective. (* .fails *)\nAbort.",
    "Theorem true_galore :\n    (True /\\ True) -> (True \\/ (True /\\ (True -> True))).\n  tauto.\nQed.\n\nPrint true_galore. (* .unfold *)",
    "Inductive taut : Set :=\n| TautTrue : taut\n| TautAnd : taut -> taut -> taut\n| TautOr : taut -> taut -> taut\n| TautImp : taut -> taut -> taut.",
    "Fixpoint tautDenote (t : taut) : Prop :=\n  match t with\n    | TautTrue => True\n    | TautAnd t1 t2 => tautDenote t1 /\\ tautDenote t2\n    | TautOr t1 t2 => tautDenote t1 \\/ tautDenote t2\n    | TautImp t1 t2 => tautDenote t1 -> tautDenote t2\n  end.",
    "Theorem tautTrue : forall t, tautDenote t.\n  induct t; simplify; propositional.\nQed.",
    "Ltac tautReify P :=\n  match P with\n    | True => TautTrue\n    | ?P1 /\\ ?P2 =>\n      let t1 := tautReify P1 in\n      let t2 := tautReify P2 in\n        constr:(TautAnd t1 t2)\n    | ?P1 \\/ ?P2 =>\n      let t1 := tautReify P1 in\n      let t2 := tautReify P2 in\n        constr:(TautOr t1 t2)\n    | ?P1 -> ?P2 =>\n      let t1 := tautReify P1 in\n      let t2 := tautReify P2 in\n        constr:(TautImp t1 t2)\n  end.",
    "Ltac obvious :=\n  match goal with\n    | [ |- ?P ] =>\n      let t := tautReify P in\n      change (tautDenote t); apply tautTrue\n  end.",
    "Theorem true_galore' :\n    (True /\\ True) -> (True \\/ (True /\\ (True -> True))).\n  obvious.\nQed.\n\nSet Printing All. (* .none *)\nPrint true_galore'. (* .unfold *)\nUnset Printing All. (* .none *)",
    "Section monoid.\n  Variable A : Set.\n  Variable e : A.\n  Variable f : A -> A -> A.\n\n  Infix \"+\" := f.\n\n  Hypothesis assoc : forall a b c, (a + b) + c = a + (b + c).\n  Hypothesis identl : forall a, e + a = a.\n  Hypothesis identr : forall a, a + e = a.",
    "  Inductive mexp : Set :=\n  | Ident : mexp\n  | Var : A -> mexp\n  | Op : mexp -> mexp -> mexp.",
    "  Fixpoint mdenote (me : mexp) : A :=\n    match me with\n      | Ident => e\n      | Var v => v\n      | Op me1 me2 => mdenote me1 + mdenote me2\n    end.",
    "  Fixpoint mldenote (ls : list A) : A :=\n    match ls with\n      | nil => e\n      | x :: ls' => x + mldenote ls'\n    end.",
    "  Fixpoint flatten (me : mexp) : list A :=\n    match me with\n      | Ident => []\n      | Var x => [x]\n      | Op me1 me2 => flatten me1 ++ flatten me2\n    end.",
    "  Lemma flatten_correct' : forall ml2 ml1,\n    mldenote (ml1 ++ ml2) = mldenote ml1 + mldenote ml2.\n      induction ml1; simplify; equality.\n  Qed.\n\n  Hint Rewrite flatten_correct'.\n\n  Theorem flatten_correct : forall me, mdenote me = mldenote (flatten me).\n      induction me; simplify; equality.\n  Qed.",
    "  Theorem monoid_reflect : forall me1 me2,\n    mldenote (flatten me1) = mldenote (flatten me2)\n    -> mdenote me1 = mdenote me2.\n      simplify; repeat rewrite flatten_correct; assumption.\n  Qed.",
    "  Ltac reify me :=\n    match me with\n      | e => Ident\n      | ?me1 + ?me2 =>\n        let r1 := reify me1 in\n        let r2 := reify me2 in\n          constr:(Op r1 r2)\n      | _ => constr:(Var me)\n    end.",
    "  Ltac monoid :=\n    match goal with\n      | [ |- ?me1 = ?me2 ] =>\n        let r1 := reify me1 in\n        let r2 := reify me2 in\n          change (mdenote r1 = mdenote r2);\n            apply monoid_reflect; simplify\n    end.",
    "  Theorem t1 : forall a b c d, a + b + c + d = a + (b + c) + d.\n    simplify; monoid.",
    "    reflexivity.\n  Qed.",
    "  Set Printing All. (* .none *)\n  Print t1. (* .unfold *)\n  Unset Printing All. (* .none *)",
    "End monoid.",
    "Inductive subtract_step : nat -> nat -> Prop :=\n| Subtract1 : forall n, subtract_step (S n) n\n| Subtract2 : forall n, subtract_step (S (S n)) n.\n\nDefinition subtract_sys (n : nat) : trsys nat := {|\n  Initial := {n};\n  Step := subtract_step\n|}.\n\nLemma subtract_ok :\n  invariantFor (subtract_sys 5)\n               (fun n => n <= 5).\n  eapply invariant_weaken.\n\n  apply multiStepClosure_ok.\n  simplify.",
    "  eapply MscStep.\n  closure.",
    "  simplify.",
    "Abort.",
    "Inductive setexpr :=\n| Literal (ns : list nat)\n| Union (e1 e2 : setexpr).",
    "Fixpoint setexprDenote (e : setexpr) : set nat :=\n  match e with\n  | Literal ns => constant ns\n  | Union e1 e2 => setexprDenote e1 \\cup setexprDenote e2\n  end.",
    "Fixpoint normalize (e : setexpr) : list nat :=\n  match e with\n  | Literal ns => dedup ns\n  | Union e1 e2 => setmerge (normalize e1) (normalize e2)\n  end.",
    "Theorem normalize_ok : forall e,\n    setexprDenote e = constant (normalize e).",
    "  induct e; simpl.\n  pose proof (constant_dedup (fun x => x) ns).\n  repeat rewrite map_id in H.\n  equality.\n\n  rewrite IHe1, IHe2.\n  pose proof (constant_map_setmerge\n                (fun x => x) (normalize e2) (normalize e1)).\n  repeat rewrite map_id in H.\n  equality.\nQed.",
    "Ltac reify_set E :=\n  match E with\n  | constant ?ns => constr:(Literal ns)\n  | ?E1 \\cup ?E2 =>\n    let e1 := reify_set E1 in\n    let e2 := reify_set E2 in\n    constr:(Union e1 e2)\n  | _ => let pf := constr:(E = {}) in constr:(Literal [])\n  end.",
    "Ltac simplify_set :=\n  match goal with\n  | [ |- context[?X \\cup ?Y] ] =>\n    let e := reify_set (X \\cup Y) in\n    let Heq := fresh in\n    assert (Heq : X \\cup Y = setexprDenote e) by reflexivity;\n    rewrite Heq; clear Heq;\n    rewrite normalize_ok; simpl\n  end.",
    "Lemma subtract_ok :\n  invariantFor (subtract_sys 5)\n               (fun n => n <= 5).\n  eapply invariant_weaken.\n\n  apply multiStepClosure_ok.\n  simplify.",
    "  eapply MscStep.\n  closure.\n  simplify_set.",
    "  simplify_set.",
    "  simplify.\n\n  eapply MscStep.\n  closure.\n  simplify_set.\n  simplify_set.\n  simplify.\n\n  eapply MscStep.\n  closure.\n  simplify_set.\n  simplify_set.\n  simplify.\n\n  eapply MscStep.\n  closure.\n  simplify_set.\n  simplify_set.\n  simplify.\n\n  model_check_done.\n\n  simplify.\n  linear_arithmetic.\nQed.",
    "Definition propvar := nat.\n\nInductive formula : Set :=\n| Atomic : propvar -> formula\n| Truth : formula\n| Falsehood : formula\n| And : formula -> formula -> formula\n| Or : formula -> formula -> formula\n| Imp : formula -> formula -> formula.",
    "Definition asgn := nat -> Prop.\n\nFixpoint formulaDenote (atomics : asgn) (f : formula) : Prop :=\n  match f with\n    | Atomic v => atomics v\n    | Truth => True\n    | Falsehood => False\n    | And f1 f2 => formulaDenote atomics f1 /\\ formulaDenote atomics f2\n    | Or f1 f2 => formulaDenote atomics f1 \\/ formulaDenote atomics f2\n    | Imp f1 f2 => formulaDenote atomics f1 -> formulaDenote atomics f2\n  end.\n\nSection my_tauto.\n  Variable atomics : asgn.",
    "  Require Import ListSet.",
    "  Definition add (s : set propvar) (v : propvar) :=\n    set_add eq_nat_dec v s.",
    "  Fixpoint allTrue (s : set propvar) : Prop :=\n    match s with\n      | nil => True\n      | v :: s' => atomics v /\\ allTrue s'\n    end.\n\n  Theorem allTrue_add : forall v s,\n    allTrue s\n    -> atomics v\n    -> allTrue (add s v).\n      induct s; simplify; propositional;\n      match goal with\n        | [ |- context[if ?E then _ else _] ] => destruct E\n      end; simplify; propositional.\n  Qed.\n\n  Theorem allTrue_In : forall v s,\n    allTrue s\n    -> set_In v s\n    -> atomics v.\n      induct s; simplify; equality.\n  Qed.",
    "  Fixpoint forward (f : formula) (known : set propvar) (hyp : formula)\n           (cont : set propvar -> bool) : bool :=\n    match hyp with\n    | Atomic v => cont (add known v)\n    | Truth => cont known\n    | Falsehood => true\n    | And h1 h2 => forward (Imp h2 f) known h1 (fun known' =>\n                     forward f known' h2 cont)\n    | Or h1 h2 => forward f known h1 cont && forward f known h2 cont\n    | Imp _ _ => cont known\n    end.",
    "  Fixpoint backward (known : set propvar) (f : formula) : bool :=\n    match f with\n    | Atomic v => if In_dec eq_nat_dec v known then true else false\n    | Truth => true\n    | Falsehood => false\n    | And f1 f2 => backward known f1 && backward known f2\n    | Or f1 f2 => backward known f1 || backward known f2\n    | Imp f1 f2 => forward f2 known f1\n                     (fun known' => backward known' f2)\n    end.\nEnd my_tauto.\n\nLemma forward_ok : forall atomics hyp f known cont,\n    forward f known hyp cont = true\n    -> (forall known', allTrue atomics known'\n                       -> cont known' = true\n                       -> formulaDenote atomics f)\n    -> allTrue atomics known\n    -> formulaDenote atomics hyp\n    -> formulaDenote atomics f.\n  induct hyp; simplify; propositional.\n\n  apply H0 with (known' := add known p).\n  apply allTrue_add.\n  assumption.\n  assumption.\n  assumption.\n\n  eapply H0.\n  eassumption.\n  assumption.\n\n  eapply IHhyp1 in H.\n  simplify; propositional.\n  simplify.\n  eapply IHhyp2.\n  eassumption.\n  assumption.\n  assumption.\n  assumption.\n  assumption.\n  assumption.\n\n  apply andb_true_iff in H; propositional.\n  eapply IHhyp1.\n  eassumption.\n  assumption.\n  assumption.\n  assumption.\n\n  apply andb_true_iff in H; propositional.\n  eapply IHhyp2.\n  eassumption.\n  assumption.\n  assumption.\n  assumption.\n\n  eapply H0.\n  eassumption.\n  assumption.\nQed.\n\nLemma backward_ok' : forall atomics f known,\n    backward known f = true\n    -> allTrue atomics known\n    -> formulaDenote atomics f.\n  induct f; simplify; propositional.\n\n  cases (in_dec Nat.eq_dec p known); propositional.\n  eapply allTrue_In.\n  eassumption.\n  unfold set_In.\n  assumption.\n  equality.\n\n  equality.\n\n  apply andb_true_iff in H; propositional.\n  eapply IHf1.\n  eassumption.\n  assumption.\n\n  apply andb_true_iff in H; propositional.\n  eapply IHf2.\n  eassumption.\n  assumption.\n\n  apply orb_true_iff in H; propositional.\n  left.\n  eapply IHf1.\n  eassumption.\n  assumption.\n  right.\n  eapply IHf2.\n  eassumption.\n  assumption.\n\n  eapply forward_ok.\n  eassumption.\n  simplify.\n  eapply IHf2.\n  eassumption.\n  assumption.\n  assumption.\n  assumption.\nQed.\n\nTheorem backward_ok : forall f,\n    backward [] f = true\n    -> forall atomics, formulaDenote atomics f.\n  simplify.\n  apply backward_ok' with (known := []).\n  assumption.\n  simplify.\n  propositional.\nQed.",
    "Ltac position x ls :=\n  match ls with\n  | [] => constr:(@None nat)\n  | x :: _ => constr:(Some 0)\n  | _ :: ?ls' =>\n    let p := position x ls' in\n    match p with\n    | None => p\n    | Some ?n => constr:(Some (S n))\n    end\n  end.",
    "Ltac vars_in P acc :=\n  match P with\n  | True => acc\n  | False => acc\n  | ?Q1 /\\ ?Q2 =>\n    let acc' := vars_in Q1 acc in\n    vars_in Q2 acc'\n  | ?Q1 \\/ ?Q2 =>\n    let acc' := vars_in Q1 acc in\n    vars_in Q2 acc'\n  | ?Q1 -> ?Q2 =>\n    let acc' := vars_in Q1 acc in\n    vars_in Q2 acc'\n  | _ =>\n    let pos := position P acc in\n    match pos with\n    | Some _ => acc\n    | None => constr:(P :: acc)\n    end\n  end.",
    "Ltac reify_tauto' P vars :=\n  match P with\n  | True => Truth\n  | False => Falsehood\n  | ?Q1 /\\ ?Q2 =>\n    let q1 := reify_tauto' Q1 vars in\n    let q2 := reify_tauto' Q2 vars in\n    constr:(And q1 q2)\n  | ?Q1 \\/ ?Q2 =>\n    let q1 := reify_tauto' Q1 vars in\n    let q2 := reify_tauto' Q2 vars in\n    constr:(Or q1 q2)\n  | ?Q1 -> ?Q2 =>\n    let q1 := reify_tauto' Q1 vars in\n    let q2 := reify_tauto' Q2 vars in\n    constr:(Imp q1 q2)\n  | _ =>\n    let pos := position P vars in\n    match pos with\n    | Some ?pos' => constr:(Atomic pos')\n    end\n  end.",
    "Ltac my_tauto :=\n  repeat match goal with\n           | [ |- forall x : ?P, _ ] =>\n             match type of P with\n               | Prop => fail 1\n               | _ => intro\n             end\n         end;\n  match goal with\n    | [ |- ?P ] =>\n      let vars := vars_in P (@nil Prop) in\n      let p := reify_tauto' P vars in\n      change (formulaDenote (nth_default False vars) p)\n  end;\n  apply backward_ok; reflexivity.",
    "Theorem mt1 : True.\n  my_tauto.\nQed.\n\nPrint mt1. (* .unfold *)\n\nTheorem mt2 : forall x y : nat, x = y -> x = y.\n  my_tauto.\nQed.\n\nPrint mt2. (* .unfold *)",
    "Theorem mt3 : forall x y z,\n  (x < y /\\ y > z) \\/ (y > z /\\ x < S y)\n  -> y > z /\\ (x < y \\/ x < S y).\n  my_tauto.\nQed.\n\nPrint mt3. (* .unfold *)",
    "Theorem mt4\n  : True /\\ True /\\ True /\\ True /\\ True /\\ True /\\ False -> False.\n  my_tauto.\nQed.\n\nPrint mt4. (* .unfold *)\n\nTheorem mt4'\n  : True /\\ True /\\ True /\\ True /\\ True /\\ True /\\ False -> False.\n  tauto.\nQed.\n\nPrint mt4'. (* .unfold *)"
  ],
  "annotated": [
    [
      {
        "_type": "sentence",
        "contents": "Require Import Frap.Frap.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Set Implicit Arguments.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Set Asymmetric Patterns.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Set Printing Depth 1.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Inductive isEven : nat -> Prop :=\n| Even_O : isEven O\n| Even_SS : forall n, isEven n -> isEven (S (S n)).",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Ltac prove_even := repeat constructor.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Theorem even_256 : isEven 256.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven 256",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "prove_even.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Set Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)\n"
      },
      {
        "_type": "sentence",
        "contents": "Print even_256.",
        "messages": [
          {
            "_type": "message",
            "contents": "even_256 = \n@Even_SS\n  (S (S (S (S (S (S (S (S (S (S (S (S (...)))))))))))))\n  (@Even_SS\n     (S (S (S (S (S (S (S (S (S (S (S (...))))))))))))\n     (@Even_SS\n        (S (S (S (S (S (S (S (S (S (S (...)))))))))))\n        (@Even_SS\n           (S (S (S (S (S (S (S (S (S (...))))))))))\n           (@Even_SS\n              (S (S (S (S (S (S (S (S (...)))))))))\n              (@Even_SS\n                 (S (S (S (S (S (S (S (...))))))))\n                 (@Even_SS\n                    (S (S (S (S (S (S (...)))))))\n                    (@Even_SS\n                       (S (S (S (S (S (...))))))\n                       (@Even_SS (S (S (S (S (...)))))\n                          (@Even_SS (S (S (S (...))))\n                             (@Even_SS (S (S (...)))\n                                (@Even_SS (S (...))\n                                   (@Even_SS (...)\n                                      (...)))))))))))))\n     : isEven\n         (S\n            (S\n               (S\n                  (S\n                     (S\n                        (S\n                           (S\n                              (S (S (S (S (S (...)))))))))))))"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)\n"
      },
      {
        "_type": "sentence",
        "contents": "Unset Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)"
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Fixpoint check_even (n : nat) : bool :=\n  match n with\n  | 0 => true\n  | 1 => false\n  | S (S n') => check_even n'\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Lemma check_even_ok' : forall n n', n' < n\n  -> if check_even n' then isEven n' else ~isEven n'.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall n n' : nat,\nn' < n ->\nif check_even n' then isEven n' else ~ isEven n'",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "induct n; simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if check_even n' then isEven n' else ~ isEven n'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "n' < 0"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if check_even n' then isEven n' else ~ isEven n'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n'0 : nat,\nn'0 < n -> if check_even n'0 then isEven n'0 else ~ isEven n'0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "n' < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "linear_arithmetic.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if check_even n' then isEven n' else ~ isEven n'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n'0 : nat,\nn'0 < n -> if check_even n'0 then isEven n'0 else ~ isEven n'0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "n' < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "cases n'; simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven 0",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n' : nat, n' < n -> if check_even n' then isEven n' else ~ isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "0 < S n"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if\n match n' with\n | 0 => false\n | S n'0 => check_even n'0\n end\nthen isEven (S n')\nelse ~ isEven (S n')",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n'0 : nat,\nn'0 < n -> if check_even n'0 then isEven n'0 else ~ isEven n'0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S n' < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "constructor.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if\n match n' with\n | 0 => false\n | S n'0 => check_even n'0\n end\nthen isEven (S n')\nelse ~ isEven (S n')",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n'0 : nat,\nn'0 < n -> if check_even n'0 then isEven n'0 else ~ isEven n'0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S n' < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "cases n'; simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "~ isEven 1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n' : nat, n' < n -> if check_even n' then isEven n' else ~ isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "1 < S n"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if check_even n'\nthen isEven (S (S n'))\nelse ~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n'0 : nat,\nn'0 < n -> if check_even n'0 then isEven n'0 else ~ isEven n'0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n' : nat,\nn' < n -> if check_even n' then isEven n' else isEven n' -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "1 < S n"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "isEven 1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if check_even n'\nthen isEven (S (S n'))\nelse ~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n'0 : nat,\nn'0 < n -> if check_even n'0 then isEven n'0 else ~ isEven n'0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "invert H0.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if check_even n'\nthen isEven (S (S n'))\nelse ~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "forall n'0 : nat,\nn'0 < n -> if check_even n'0 then isEven n'0 else ~ isEven n'0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "specialize (IHn n').",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "if check_even n'\nthen isEven (S (S n'))\nelse ~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> if check_even n' then isEven n' else ~ isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "cases (check_even n').",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> ~ isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "constructor.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven n'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> ~ isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply IHn.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "n' < n",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> ~ isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "linear_arithmetic.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "~ isEven (S (S n'))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> ~ isEven n'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n' -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "isEven (S (S n'))"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "invert H0.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n' -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "isEven n'"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply IHn.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "n' < n",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n' -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "isEven n'"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven n'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n' -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "isEven n'"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "linear_arithmetic.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven n'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n",
                  "n'"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "Heq"
                ],
                "body": null,
                "type": "check_even n' = false"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHn"
                ],
                "body": null,
                "type": "n' < n -> isEven n' -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "S (S n') < S n"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "isEven n'"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem check_even_ok : forall n, check_even n = true -> isEven n.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall n : nat, check_even n = true -> isEven n",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven n",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "check_even n = true"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assert (n < S n) by linear_arithmetic.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven n",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "check_even n = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "n < S n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply check_even_ok' in H0.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven n",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "check_even n = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "if check_even n then isEven n else ~ isEven n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "rewrite H in H0.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven n",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "check_even n = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "isEven n"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac prove_even_reflective :=\n  match goal with\n    | [ |- isEven ?N] => apply check_even_ok; reflexivity\n  end.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Theorem even_256' : isEven 256.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven 256",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "prove_even_reflective.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Set Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)\n"
      },
      {
        "_type": "sentence",
        "contents": "Print even_256'.",
        "messages": [
          {
            "_type": "message",
            "contents": "even_256' = \ncheck_even_ok\n  (S (S (S (S (S (S (S (S (S (S (S (S (...)))))))))))))\n  (@eq_refl bool true)\n     : isEven\n         (S\n            (S\n               (S\n                  (S\n                     (S\n                        (S\n                           (S\n                              (S (S (S (S (S (...)))))))))))))"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)\n"
      },
      {
        "_type": "sentence",
        "contents": "Unset Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)"
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem even_255 : isEven 255.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven 255",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Fail prove_even_reflective.",
        "messages": [
          {
            "_type": "message",
            "contents": "The command has indeed failed with message:\nUnable to unify \"true\" with \"check_even 255\"."
          }
        ],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "isEven 255",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": " (* .fails *)\n"
      },
      {
        "_type": "sentence",
        "contents": "Abort.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem true_galore :\n    (True /\\ True) -> (True \\/ (True /\\ (True -> True))).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "True /\\ True -> True \\/ True /\\ (True -> True)",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Print true_galore.",
        "messages": [
          {
            "_type": "message",
            "contents": "true_galore = \nfun H : True /\\ True =>\nand_ind (fun _ _ : True => or_introl I) H\n     : True /\\ True -> True \\/ True /\\ (True -> True)"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)"
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Inductive taut : Set :=\n| TautTrue : taut\n| TautAnd : taut -> taut -> taut\n| TautOr : taut -> taut -> taut\n| TautImp : taut -> taut -> taut.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Fixpoint tautDenote (t : taut) : Prop :=\n  match t with\n    | TautTrue => True\n    | TautAnd t1 t2 => tautDenote t1 /\\ tautDenote t2\n    | TautOr t1 t2 => tautDenote t1 \\/ tautDenote t2\n    | TautImp t1 t2 => tautDenote t1 -> tautDenote t2\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem tautTrue : forall t, tautDenote t.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall t : taut, tautDenote t",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "induct t; simplify; propositional.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac tautReify P :=\n  match P with\n    | True => TautTrue\n    | ?P1 /\\ ?P2 =>\n      let t1 := tautReify P1 in\n      let t2 := tautReify P2 in\n        constr:(TautAnd t1 t2)\n    | ?P1 \\/ ?P2 =>\n      let t1 := tautReify P1 in\n      let t2 := tautReify P2 in\n        constr:(TautOr t1 t2)\n    | ?P1 -> ?P2 =>\n      let t1 := tautReify P1 in\n      let t2 := tautReify P2 in\n        constr:(TautImp t1 t2)\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac obvious :=\n  match goal with\n    | [ |- ?P ] =>\n      let t := tautReify P in\n      change (tautDenote t); apply tautTrue\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem true_galore' :\n    (True /\\ True) -> (True \\/ (True /\\ (True -> True))).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "True /\\ True -> True \\/ True /\\ (True -> True)",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "obvious.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Set Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)\n"
      },
      {
        "_type": "sentence",
        "contents": "Print true_galore'.",
        "messages": [
          {
            "_type": "message",
            "contents": "true_galore' = \ntautTrue\n  (TautImp (TautAnd TautTrue TautTrue)\n     (TautOr TautTrue\n        (TautAnd TautTrue (TautImp TautTrue TautTrue))))\n     : forall _ : and True True,\n       or True (and True (forall _ : True, True))"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)\n"
      },
      {
        "_type": "sentence",
        "contents": "Unset Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)"
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Section monoid.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Variable A : Set.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Variable e : A.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Variable f : A -> A -> A.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "Infix \"+\" := f.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "Hypothesis assoc : forall a b c, (a + b) + c = a + (b + c).",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Hypothesis identl : forall a, e + a = a.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Hypothesis identr : forall a, a + e = a.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Inductive mexp : Set :=\n  | Ident : mexp\n  | Var : A -> mexp\n  | Op : mexp -> mexp -> mexp.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Fixpoint mdenote (me : mexp) : A :=\n    match me with\n      | Ident => e\n      | Var v => v\n      | Op me1 me2 => mdenote me1 + mdenote me2\n    end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Fixpoint mldenote (ls : list A) : A :=\n    match ls with\n      | nil => e\n      | x :: ls' => x + mldenote ls'\n    end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Fixpoint flatten (me : mexp) : list A :=\n    match me with\n      | Ident => []\n      | Var x => [x]\n      | Op me1 me2 => flatten me1 ++ flatten me2\n    end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Lemma flatten_correct' : forall ml2 ml1,\n    mldenote (ml1 ++ ml2) = mldenote ml1 + mldenote ml2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall ml2 ml1 : list A,\nmldenote (ml1 ++ ml2) = mldenote ml1 + mldenote ml2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "A"
                ],
                "body": null,
                "type": "Set"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "e"
                ],
                "body": null,
                "type": "A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "A -> A -> A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "assoc"
                ],
                "body": null,
                "type": "forall a b c : A, a + b + c = a + (b + c)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identl"
                ],
                "body": null,
                "type": "forall a : A, e + a = a"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identr"
                ],
                "body": null,
                "type": "forall a : A, a + e = a"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n      "
      },
      {
        "_type": "sentence",
        "contents": "induction ml1; simplify; equality.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "Hint Rewrite flatten_correct'.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "Theorem flatten_correct : forall me, mdenote me = mldenote (flatten me).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall me : mexp, mdenote me = mldenote (flatten me)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "A"
                ],
                "body": null,
                "type": "Set"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "e"
                ],
                "body": null,
                "type": "A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "A -> A -> A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "assoc"
                ],
                "body": null,
                "type": "forall a b c : A, a + b + c = a + (b + c)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identl"
                ],
                "body": null,
                "type": "forall a : A, e + a = a"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identr"
                ],
                "body": null,
                "type": "forall a : A, a + e = a"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n      "
      },
      {
        "_type": "sentence",
        "contents": "induction me; simplify; equality.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Theorem monoid_reflect : forall me1 me2,\n    mldenote (flatten me1) = mldenote (flatten me2)\n    -> mdenote me1 = mdenote me2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall me1 me2 : mexp,\nmldenote (flatten me1) = mldenote (flatten me2) ->\nmdenote me1 = mdenote me2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "A"
                ],
                "body": null,
                "type": "Set"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "e"
                ],
                "body": null,
                "type": "A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "A -> A -> A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "assoc"
                ],
                "body": null,
                "type": "forall a b c : A, a + b + c = a + (b + c)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identl"
                ],
                "body": null,
                "type": "forall a : A, e + a = a"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identr"
                ],
                "body": null,
                "type": "forall a : A, a + e = a"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n      "
      },
      {
        "_type": "sentence",
        "contents": "simplify; repeat rewrite flatten_correct; assumption.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Ltac reify me :=\n    match me with\n      | e => Ident\n      | ?me1 + ?me2 =>\n        let r1 := reify me1 in\n        let r2 := reify me2 in\n          constr:(Op r1 r2)\n      | _ => constr:(Var me)\n    end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Ltac monoid :=\n    match goal with\n      | [ |- ?me1 = ?me2 ] =>\n        let r1 := reify me1 in\n        let r2 := reify me2 in\n          change (mdenote r1 = mdenote r2);\n            apply monoid_reflect; simplify\n    end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Theorem t1 : forall a b c d, a + b + c + d = a + (b + c) + d.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall a b c d : A, a + b + c + d = a + (b + c) + d",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "A"
                ],
                "body": null,
                "type": "Set"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "e"
                ],
                "body": null,
                "type": "A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "A -> A -> A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "assoc"
                ],
                "body": null,
                "type": "forall a b c : A, a + b + c = a + (b + c)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identl"
                ],
                "body": null,
                "type": "forall a : A, e + a = a"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identr"
                ],
                "body": null,
                "type": "forall a : A, a + e = a"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n    "
      },
      {
        "_type": "sentence",
        "contents": "simplify; monoid.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "a + (b + (c + (d + e))) = a + (b + (c + (d + e)))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "A"
                ],
                "body": null,
                "type": "Set"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "e"
                ],
                "body": null,
                "type": "A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "A -> A -> A"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "assoc"
                ],
                "body": null,
                "type": "forall a0 b0 c0 : A,\na0 + b0 + c0 = a0 + (b0 + c0)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identl"
                ],
                "body": null,
                "type": "forall a0 : A, e + a0 = a0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "identr"
                ],
                "body": null,
                "type": "forall a0 : A, a0 + e = a0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "a",
                  "b",
                  "c",
                  "d"
                ],
                "body": null,
                "type": "A"
              }
            ]
          }
        ]
      }
    ],
    [
      {
        "_type": "text",
        "contents": "    "
      },
      {
        "_type": "sentence",
        "contents": "reflexivity.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Set Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)\n  "
      },
      {
        "_type": "sentence",
        "contents": "Print t1.",
        "messages": [
          {
            "_type": "message",
            "contents": "t1 = \n(fun a b c d : A =>\n monoid_reflect\n   (Op (Op (Op (Var a) (Var b)) (Var c)) (Var d))\n   (Op (Op (Var a) (Op (Var b) (Var c))) (Var d))\n   (@eq_refl A (f a (f b (f c (f d e))))\n    :\n    @eq A\n      (mldenote\n         (flatten\n            (Op (Op (Op (Var a) (Var b)) (Var c))\n               (Var d))))\n      (mldenote\n         (flatten\n            (Op (Op (Var a) (Op (Var b) (Var c)))\n               (Var d))))))\n:\nforall a b c d : A,\n@eq A (f (f (f a b) c) d) (f (f a (f b c)) d)\n     : forall a b c d : A,\n       @eq A (f (f (f a b) c) d) (f (f a (f b c)) d)"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)\n  "
      },
      {
        "_type": "sentence",
        "contents": "Unset Printing All.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .none *)"
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "End monoid.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Inductive subtract_step : nat -> nat -> Prop :=\n| Subtract1 : forall n, subtract_step (S n) n\n| Subtract2 : forall n, subtract_step (S (S n)) n.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Definition subtract_sys (n : nat) : trsys nat := {|\n  Initial := {n};\n  Step := subtract_step\n|}.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Lemma subtract_ok :\n  invariantFor (subtract_sys 5)\n               (fun n => n <= 5).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "invariantFor (subtract_sys 5) (fun n : nat => n <= 5)",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply invariant_weaken.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "invariantFor (subtract_sys 5) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply multiStepClosure_ok.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  (Initial (subtract_sys 5))\n  (Initial (subtract_sys 5)) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5} {5} ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "eapply MscStep.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "oneStepClosure (subtract_sys 5) {5} ?inv'",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) ({5} \\cup ?inv')\n  (?inv' \\setminus {5}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "closure.",
        "messages": [
          {
            "_type": "message",
            "contents": "4"
          },
          {
            "_type": "message",
            "contents": "3"
          },
          {
            "_type": "message",
            "contents": "3"
          }
        ],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5} \\cup\n   (({5} \\cup ({4} \\cup ({3} \\cup ?rest))) \\cup { }))\n  ((({5} \\cup ({4} \\cup ({3} \\cup ?rest))) \\cup { }) \\setminus\n   {5}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3} {4, 3}\n  ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Abort.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Inductive setexpr :=\n| Literal (ns : list nat)\n| Union (e1 e2 : setexpr).",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Fixpoint setexprDenote (e : setexpr) : set nat :=\n  match e with\n  | Literal ns => constant ns\n  | Union e1 e2 => setexprDenote e1 \\cup setexprDenote e2\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Fixpoint normalize (e : setexpr) : list nat :=\n  match e with\n  | Literal ns => dedup ns\n  | Union e1 e2 => setmerge (normalize e1) (normalize e2)\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem normalize_ok : forall e,\n    setexprDenote e = constant (normalize e).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall e : setexpr,\nsetexprDenote e = constant (normalize e)",
            "hypotheses": []
          }
        ]
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "induct e; simpl.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "constant ns = constant (dedup ns)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "ns"
                ],
                "body": null,
                "type": "list nat"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "setexprDenote e1 \\cup setexprDenote e2 =\nconstant (setmerge (normalize e1) (normalize e2))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "e1",
                  "e2"
                ],
                "body": null,
                "type": "setexpr"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe1"
                ],
                "body": null,
                "type": "setexprDenote e1 = constant (normalize e1)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe2"
                ],
                "body": null,
                "type": "setexprDenote e2 = constant (normalize e2)"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "pose proof (constant_dedup (fun x => x) ns).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "constant ns = constant (dedup ns)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "ns"
                ],
                "body": null,
                "type": "list nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "constant (map (fun x : nat => x) (dedup ns)) =\nconstant (map (fun x : nat => x) ns)"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "setexprDenote e1 \\cup setexprDenote e2 =\nconstant (setmerge (normalize e1) (normalize e2))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "e1",
                  "e2"
                ],
                "body": null,
                "type": "setexpr"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe1"
                ],
                "body": null,
                "type": "setexprDenote e1 = constant (normalize e1)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe2"
                ],
                "body": null,
                "type": "setexprDenote e2 = constant (normalize e2)"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "repeat rewrite map_id in H.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "constant ns = constant (dedup ns)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "ns"
                ],
                "body": null,
                "type": "list nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "constant (dedup ns) = constant ns"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "setexprDenote e1 \\cup setexprDenote e2 =\nconstant (setmerge (normalize e1) (normalize e2))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "e1",
                  "e2"
                ],
                "body": null,
                "type": "setexpr"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe1"
                ],
                "body": null,
                "type": "setexprDenote e1 = constant (normalize e1)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe2"
                ],
                "body": null,
                "type": "setexprDenote e2 = constant (normalize e2)"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "equality.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "setexprDenote e1 \\cup setexprDenote e2 =\nconstant (setmerge (normalize e1) (normalize e2))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "e1",
                  "e2"
                ],
                "body": null,
                "type": "setexpr"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe1"
                ],
                "body": null,
                "type": "setexprDenote e1 = constant (normalize e1)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe2"
                ],
                "body": null,
                "type": "setexprDenote e2 = constant (normalize e2)"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "rewrite IHe1, IHe2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "constant (normalize e1) \\cup constant (normalize e2) =\nconstant (setmerge (normalize e1) (normalize e2))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "e1",
                  "e2"
                ],
                "body": null,
                "type": "setexpr"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe1"
                ],
                "body": null,
                "type": "setexprDenote e1 = constant (normalize e1)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe2"
                ],
                "body": null,
                "type": "setexprDenote e2 = constant (normalize e2)"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "pose proof (constant_map_setmerge\n                (fun x => x) (normalize e2) (normalize e1)).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "constant (normalize e1) \\cup constant (normalize e2) =\nconstant (setmerge (normalize e1) (normalize e2))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "e1",
                  "e2"
                ],
                "body": null,
                "type": "setexpr"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe1"
                ],
                "body": null,
                "type": "setexprDenote e1 = constant (normalize e1)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe2"
                ],
                "body": null,
                "type": "setexprDenote e2 = constant (normalize e2)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "constant\n  (map (fun x : nat => x)\n     (setmerge (normalize e1) (normalize e2))) =\nconstant (map (fun x : nat => x) (normalize e1)) \\cup\nconstant (map (fun x : nat => x) (normalize e2))"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "repeat rewrite map_id in H.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "constant (normalize e1) \\cup constant (normalize e2) =\nconstant (setmerge (normalize e1) (normalize e2))",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "e1",
                  "e2"
                ],
                "body": null,
                "type": "setexpr"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe1"
                ],
                "body": null,
                "type": "setexprDenote e1 = constant (normalize e1)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHe2"
                ],
                "body": null,
                "type": "setexprDenote e2 = constant (normalize e2)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "constant (setmerge (normalize e1) (normalize e2)) =\nconstant (normalize e1) \\cup\nconstant (normalize e2)"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "equality.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac reify_set E :=\n  match E with\n  | constant ?ns => constr:(Literal ns)\n  | ?E1 \\cup ?E2 =>\n    let e1 := reify_set E1 in\n    let e2 := reify_set E2 in\n    constr:(Union e1 e2)\n  | _ => let pf := constr:(E = {}) in constr:(Literal [])\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac simplify_set :=\n  match goal with\n  | [ |- context[?X \\cup ?Y] ] =>\n    let e := reify_set (X \\cup Y) in\n    let Heq := fresh in\n    assert (Heq : X \\cup Y = setexprDenote e) by reflexivity;\n    rewrite Heq; clear Heq;\n    rewrite normalize_ok; simpl\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Lemma subtract_ok :\n  invariantFor (subtract_sys 5)\n               (fun n => n <= 5).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "invariantFor (subtract_sys 5) (fun n : nat => n <= 5)",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply invariant_weaken.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "invariantFor (subtract_sys 5) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply multiStepClosure_ok.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  (Initial (subtract_sys 5))\n  (Initial (subtract_sys 5)) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5} {5} ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "eapply MscStep.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "oneStepClosure (subtract_sys 5) {5} ?inv'",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) ({5} \\cup ?inv')\n  (?inv' \\setminus {5}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "closure.",
        "messages": [
          {
            "_type": "message",
            "contents": "4"
          },
          {
            "_type": "message",
            "contents": "3"
          },
          {
            "_type": "message",
            "contents": "3"
          }
        ],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5} \\cup\n   (({5} \\cup ({4} \\cup ({3} \\cup ?rest))) \\cup { }))\n  ((({5} \\cup ({4} \\cup ({3} \\cup ?rest))) \\cup { }) \\setminus\n   {5}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3}\n  ((({5} \\cup ({4} \\cup ({3} \\cup { }))) \\cup { }) \\setminus\n   {5}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3}\n  ({5, 4, 3} \\setminus {5}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3} {4, 3}\n  ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply MscStep.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "oneStepClosure (subtract_sys 5) {4, 3} ?inv'",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5, 4, 3} \\cup ?inv') (?inv' \\setminus {5, 4, 3})\n  ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "closure.",
        "messages": [
          {
            "_type": "message",
            "contents": "3"
          },
          {
            "_type": "message",
            "contents": "2"
          },
          {
            "_type": "message",
            "contents": "2"
          },
          {
            "_type": "message",
            "contents": "2"
          },
          {
            "_type": "message",
            "contents": "1"
          },
          {
            "_type": "message",
            "contents": "1"
          }
        ],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5, 4, 3} \\cup\n   (({4} \\cup ({3} \\cup ({2} \\cup ?rest))) \\cup\n    (({3} \\cup ({2} \\cup ({1} \\cup ?rest0))) \\cup { })))\n  ((({4} \\cup ({3} \\cup ({2} \\cup ?rest))) \\cup\n    (({3} \\cup ({2} \\cup ({1} \\cup ?rest0))) \\cup { })) \\setminus\n   {5, 4, 3}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1}\n  ((({4} \\cup ({3} \\cup ({2} \\cup { }))) \\cup\n    (({3} \\cup ({2} \\cup ({1} \\cup { }))) \\cup { })) \\setminus\n   {5, 4, 3}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1}\n  ({4, 3, 2, 1} \\setminus {5, 4, 3}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1}\n  {2, 1} ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply MscStep.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "oneStepClosure (subtract_sys 5) {2, 1} ?inv'",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5, 4, 3, 2, 1} \\cup ?inv')\n  (?inv' \\setminus {5, 4, 3, 2, 1}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "closure.",
        "messages": [
          {
            "_type": "message",
            "contents": "1"
          },
          {
            "_type": "message",
            "contents": "0"
          },
          {
            "_type": "message",
            "contents": "0"
          },
          {
            "_type": "message",
            "contents": "0"
          }
        ],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5, 4, 3, 2, 1} \\cup\n   (({2} \\cup ({1} \\cup ({0} \\cup ?rest))) \\cup\n    (({1} \\cup ({0} \\cup ?rest0)) \\cup { })))\n  ((({2} \\cup ({1} \\cup ({0} \\cup ?rest))) \\cup\n    (({1} \\cup ({0} \\cup ?rest0)) \\cup { })) \\setminus\n   {5, 4, 3, 2, 1}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1, 0}\n  ((({2} \\cup ({1} \\cup ({0} \\cup { }))) \\cup\n    (({1} \\cup ({0} \\cup { })) \\cup { })) \\setminus\n   {5, 4, 3, 2, 1}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1, 0}\n  ({2, 1, 0} \\setminus {5, 4, 3, 2, 1}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1, 0}\n  {0} ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply MscStep.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "oneStepClosure (subtract_sys 5) {0} ?inv'",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5, 4, 3, 2, 1, 0} \\cup ?inv')\n  (?inv' \\setminus {5, 4, 3, 2, 1, 0}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "closure.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5)\n  ({5, 4, 3, 2, 1, 0} \\cup (({0} \\cup ?inv1) \\cup { }))\n  ((({0} \\cup ?inv1) \\cup { }) \\setminus\n   {5, 4, 3, 2, 1, 0}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1, 0}\n  ((({0} \\cup { }) \\cup { }) \\setminus\n   {5, 4, 3, 2, 1, 0}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify_set.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1, 0}\n  ({0} \\setminus {5, 4, 3, 2, 1, 0}) ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "multiStepClosure (subtract_sys 5) {5, 4, 3, 2, 1, 0}\n  { } ?invariant1",
            "hypotheses": []
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, ?invariant1 s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "model_check_done.",
        "messages": [
          {
            "_type": "message",
            "contents": "4"
          },
          {
            "_type": "message",
            "contents": "3"
          },
          {
            "_type": "message",
            "contents": "3"
          },
          {
            "_type": "message",
            "contents": "3"
          },
          {
            "_type": "message",
            "contents": "2"
          },
          {
            "_type": "message",
            "contents": "2"
          },
          {
            "_type": "message",
            "contents": "2"
          },
          {
            "_type": "message",
            "contents": "1"
          },
          {
            "_type": "message",
            "contents": "1"
          },
          {
            "_type": "message",
            "contents": "1"
          },
          {
            "_type": "message",
            "contents": "0"
          },
          {
            "_type": "message",
            "contents": "0"
          },
          {
            "_type": "message",
            "contents": "0"
          }
        ],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall s : nat, {5, 4, 3, 2, 1, 0} s -> s <= 5",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "s <= 5",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "s"
                ],
                "body": null,
                "type": "nat"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "5 = s \\/\n4 = s \\/ 3 = s \\/ 2 = s \\/ 1 = s \\/ 0 = s \\/ False"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "linear_arithmetic.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Definition propvar := nat.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Inductive formula : Set :=\n| Atomic : propvar -> formula\n| Truth : formula\n| Falsehood : formula\n| And : formula -> formula -> formula\n| Or : formula -> formula -> formula\n| Imp : formula -> formula -> formula.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Definition asgn := nat -> Prop.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Fixpoint formulaDenote (atomics : asgn) (f : formula) : Prop :=\n  match f with\n    | Atomic v => atomics v\n    | Truth => True\n    | Falsehood => False\n    | And f1 f2 => formulaDenote atomics f1 /\\ formulaDenote atomics f2\n    | Or f1 f2 => formulaDenote atomics f1 \\/ formulaDenote atomics f2\n    | Imp f1 f2 => formulaDenote atomics f1 -> formulaDenote atomics f2\n  end.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Section my_tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Variable atomics : asgn.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Require Import ListSet.",
        "messages": [
          {
            "_type": "message",
            "contents": "Use of \u201cRequire\u201d inside a section is deprecated.\n[require-in-section,deprecated]"
          }
        ],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Definition add (s : set propvar) (v : propvar) :=\n    set_add eq_nat_dec v s.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Fixpoint allTrue (s : set propvar) : Prop :=\n    match s with\n      | nil => True\n      | v :: s' => atomics v /\\ allTrue s'\n    end.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "Theorem allTrue_add : forall v s,\n    allTrue s\n    -> atomics v\n    -> allTrue (add s v).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall (v : nat) (s : set propvar),\nallTrue s -> atomics v -> allTrue (add s v)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n      "
      },
      {
        "_type": "sentence",
        "contents": "induct s; simplify; propositional;\n      match goal with\n        | [ |- context[if ?E then _ else _] ] => destruct E\n      end; simplify; propositional.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "Theorem allTrue_In : forall v s,\n    allTrue s\n    -> set_In v s\n    -> atomics v.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall (v : propvar) (s : set propvar),\nallTrue s -> set_In v s -> atomics v",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n      "
      },
      {
        "_type": "sentence",
        "contents": "induct s; simplify; equality.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Fixpoint forward (f : formula) (known : set propvar) (hyp : formula)\n           (cont : set propvar -> bool) : bool :=\n    match hyp with\n    | Atomic v => cont (add known v)\n    | Truth => cont known\n    | Falsehood => true\n    | And h1 h2 => forward (Imp h2 f) known h1 (fun known' =>\n                     forward f known' h2 cont)\n    | Or h1 h2 => forward f known h1 cont && forward f known h2 cont\n    | Imp _ _ => cont known\n    end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "text",
        "contents": "  "
      },
      {
        "_type": "sentence",
        "contents": "Fixpoint backward (known : set propvar) (f : formula) : bool :=\n    match f with\n    | Atomic v => if In_dec eq_nat_dec v known then true else false\n    | Truth => true\n    | Falsehood => false\n    | And f1 f2 => backward known f1 && backward known f2\n    | Or f1 f2 => backward known f1 || backward known f2\n    | Imp f1 f2 => forward f2 known f1\n                     (fun known' => backward known' f2)\n    end.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "End my_tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Lemma forward_ok : forall atomics hyp f known cont,\n    forward f known hyp cont = true\n    -> (forall known', allTrue atomics known'\n                       -> cont known' = true\n                       -> formulaDenote atomics f)\n    -> allTrue atomics known\n    -> formulaDenote atomics hyp\n    -> formulaDenote atomics f.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall (atomics : asgn) (hyp f : formula)\n  (known : set propvar) (cont : set propvar -> bool),\nforward f known hyp cont = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont known' = true -> formulaDenote atomics f) ->\nallTrue atomics known ->\nformulaDenote atomics hyp -> formulaDenote atomics f",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "induct hyp; simplify; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply H0 with (known' := add known p).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics (add known p)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont (add known p) = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply allTrue_add.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont (add known p) = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont (add known p) = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont (add known p) = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont (add known p) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "atomics p"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply H0.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont ?known' = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont known = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "True"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHhyp1 in H.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "formulaDenote atomics (Imp hyp2 f)"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\nforward f known' hyp2 cont = true ->\nformulaDenote atomics (Imp hyp2 f)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\nforward f known' hyp2 cont = true ->\nformulaDenote atomics (Imp hyp2 f)",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHhyp2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forward f ?known hyp2 ?cont = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\n?cont known'0 = true -> formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known'0 : set propvar,\n allTrue atomics known'0 ->\n cont0 known'0 = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known'0 : set propvar =>\n   forward f known'0 hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known'0 : set propvar,\nallTrue atomics known'0 ->\ncont known'0 = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H5"
                ],
                "body": null,
                "type": "forward f known' hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H6"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward (Imp hyp2 f) known hyp1\n  (fun known' : set propvar =>\n   forward f known' hyp2 cont) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply andb_true_iff in H; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHhyp1.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forward f ?known hyp1 ?cont = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\n?cont known' = true -> formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f known hyp1 cont &&\nforward f known hyp2 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply andb_true_iff in H; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHhyp2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forward f ?known hyp2 ?cont = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\n?cont known' = true -> formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics hyp2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "forward f known hyp1 cont = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H4"
                ],
                "body": null,
                "type": "forward f known hyp2 cont = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply H0.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont ?known' = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "cont known = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "hyp1",
                  "hyp2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp1"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp1 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp1 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHhyp2"
                ],
                "body": null,
                "type": "forall (f0 : formula) (known0 : set propvar)\n  (cont0 : set propvar -> bool),\nforward f0 known0 hyp2 cont0 = true ->\n(forall known' : set propvar,\n allTrue atomics known' ->\n cont0 known' = true ->\n formulaDenote atomics f0) ->\nallTrue atomics known0 ->\nformulaDenote atomics hyp2 ->\nformulaDenote atomics f0"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "cont"
                ],
                "body": null,
                "type": "set propvar -> bool"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "cont known = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "forall known' : set propvar,\nallTrue atomics known' ->\ncont known' = true -> formulaDenote atomics f"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "formulaDenote atomics hyp1 ->\nformulaDenote atomics hyp2"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Lemma backward_ok' : forall atomics f known,\n    backward known f = true\n    -> allTrue atomics known\n    -> formulaDenote atomics f.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall (atomics : asgn) (f : formula)\n  (known : set propvar),\nbackward known f = true ->\nallTrue atomics known -> formulaDenote atomics f",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "induct f; simplify; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "(if in_dec Nat.eq_dec p known then true else false) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "cases (in_dec Nat.eq_dec p known); propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "i"
                ],
                "body": null,
                "type": "In p known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "true = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "In p known -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply allTrue_In.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?s",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "i"
                ],
                "body": null,
                "type": "In p known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "true = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "set_In p ?s",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "i"
                ],
                "body": null,
                "type": "In p known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "true = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "In p known -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "set_In p known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "i"
                ],
                "body": null,
                "type": "In p known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "true = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "In p known -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "unfold set_In.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "In p known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "i"
                ],
                "body": null,
                "type": "In p known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "true = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "In p known -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "atomics p",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "p"
                ],
                "body": null,
                "type": "propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "n"
                ],
                "body": null,
                "type": "In p known -> False"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "equality.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "False",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "false = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "equality.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply andb_true_iff in H; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHf1.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "backward ?known f1 = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 && backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply andb_true_iff in H; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHf2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "backward ?known f2 = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward known f1 || backward known f2 = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply orb_true_iff in H; propositional.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "left.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHf1.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "backward ?known f1 = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f1 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1 \\/ formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "right.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHf2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "backward ?known f2 = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "backward known f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply forward_ok.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forward f2 ?known ?hyp ?cont = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\n?cont known' = true -> formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics ?hyp",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall known' : set propvar,\nallTrue atomics known' ->\n(fun known'0 : set propvar => backward known'0 f2)\n  known' = true -> formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f2",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known'0 : set propvar =>\n   backward known'0 f2) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "backward known' f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eapply IHf2.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "backward ?known f2 = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known'0 : set propvar =>\n   backward known'0 f2) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "backward known' f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics ?known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known'0 : set propvar =>\n   backward known'0 f2) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "backward known' f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "eassumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known'",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known'0 : set propvar =>\n   backward known'0 f2) = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known'"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H2"
                ],
                "body": null,
                "type": "allTrue atomics known'"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H3"
                ],
                "body": null,
                "type": "backward known' f2 = true"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics known",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f1",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "f1",
                  "f2"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf1"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f1 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f1"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "IHf2"
                ],
                "body": null,
                "type": "forall known0 : set propvar,\nbackward known0 f2 = true ->\nallTrue atomics known0 ->\nformulaDenote atomics f2"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "known"
                ],
                "body": null,
                "type": "set propvar"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "forward f2 known f1\n  (fun known' : set propvar => backward known' f2) =\ntrue"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H0"
                ],
                "body": null,
                "type": "allTrue atomics known"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H1"
                ],
                "body": null,
                "type": "formulaDenote atomics f1"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Theorem backward_ok : forall f,\n    backward [] f = true\n    -> forall atomics, formulaDenote atomics f.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall f : formula,\nbackward [] f = true ->\nforall atomics : asgn, formulaDenote atomics f",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "formulaDenote atomics f",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward [] f = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "apply backward_ok' with (known := []).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "backward [] f = true",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward [] f = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              }
            ]
          },
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics []",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward [] f = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "assumption.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "allTrue atomics []",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward [] f = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "simplify.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "True",
            "hypotheses": [
              {
                "_type": "hypothesis",
                "names": [
                  "f"
                ],
                "body": null,
                "type": "formula"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "H"
                ],
                "body": null,
                "type": "backward [] f = true"
              },
              {
                "_type": "hypothesis",
                "names": [
                  "atomics"
                ],
                "body": null,
                "type": "asgn"
              }
            ]
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "propositional.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac position x ls :=\n  match ls with\n  | [] => constr:(@None nat)\n  | x :: _ => constr:(Some 0)\n  | _ :: ?ls' =>\n    let p := position x ls' in\n    match p with\n    | None => p\n    | Some ?n => constr:(Some (S n))\n    end\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac vars_in P acc :=\n  match P with\n  | True => acc\n  | False => acc\n  | ?Q1 /\\ ?Q2 =>\n    let acc' := vars_in Q1 acc in\n    vars_in Q2 acc'\n  | ?Q1 \\/ ?Q2 =>\n    let acc' := vars_in Q1 acc in\n    vars_in Q2 acc'\n  | ?Q1 -> ?Q2 =>\n    let acc' := vars_in Q1 acc in\n    vars_in Q2 acc'\n  | _ =>\n    let pos := position P acc in\n    match pos with\n    | Some _ => acc\n    | None => constr:(P :: acc)\n    end\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac reify_tauto' P vars :=\n  match P with\n  | True => Truth\n  | False => Falsehood\n  | ?Q1 /\\ ?Q2 =>\n    let q1 := reify_tauto' Q1 vars in\n    let q2 := reify_tauto' Q2 vars in\n    constr:(And q1 q2)\n  | ?Q1 \\/ ?Q2 =>\n    let q1 := reify_tauto' Q1 vars in\n    let q2 := reify_tauto' Q2 vars in\n    constr:(Or q1 q2)\n  | ?Q1 -> ?Q2 =>\n    let q1 := reify_tauto' Q1 vars in\n    let q2 := reify_tauto' Q2 vars in\n    constr:(Imp q1 q2)\n  | _ =>\n    let pos := position P vars in\n    match pos with\n    | Some ?pos' => constr:(Atomic pos')\n    end\n  end.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Ltac my_tauto :=\n  repeat match goal with\n           | [ |- forall x : ?P, _ ] =>\n             match type of P with\n               | Prop => fail 1\n               | _ => intro\n             end\n         end;\n  match goal with\n    | [ |- ?P ] =>\n      let vars := vars_in P (@nil Prop) in\n      let p := reify_tauto' P vars in\n      change (formulaDenote (nth_default False vars) p)\n  end;\n  apply backward_ok; reflexivity.",
        "messages": [],
        "goals": []
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem mt1 : True.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "True",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "my_tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Print mt1.",
        "messages": [
          {
            "_type": "message",
            "contents": "mt1 = \nbackward_ok Truth eq_refl (nth_default False [])\n     : True"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Theorem mt2 : forall x y : nat, x = y -> x = y.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall x y : nat, x = y -> x = y",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "my_tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Print mt2.",
        "messages": [
          {
            "_type": "message",
            "contents": "mt2 = \nfun x y : nat =>\nbackward_ok (Imp (Atomic 0) (Atomic 0)) eq_refl\n  (nth_default False [x = y])\n     : forall x y : nat, x = y -> x = y\n\nArguments x, y are implicit\nArgument scopes are [nat_scope nat_scope _]"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)"
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem mt3 : forall x y z,\n  (x < y /\\ y > z) \\/ (y > z /\\ x < S y)\n  -> y > z /\\ (x < y \\/ x < S y).",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "forall x y z : nat,\nx < y /\\ y > z \\/ y > z /\\ x < S y ->\ny > z /\\ (x < y \\/ x < S y)",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "my_tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Print mt3.",
        "messages": [
          {
            "_type": "message",
            "contents": "mt3 = \nfun x y z : nat =>\nbackward_ok\n  (Imp\n     (Or (And (Atomic 2) (Atomic 1))\n        (And (Atomic 1) (Atomic 0)))\n     (And (Atomic 1) (Or (Atomic 2) (Atomic 0))))\n  eq_refl (nth_default False [x < S y; y > z; x < y])\n     : forall x y z : nat,\n       x < y /\\ y > z \\/ y > z /\\ x < S y ->\n       y > z /\\ (x < y \\/ x < S y)\n\nArguments x, y, z are implicit\nArgument scopes are [nat_scope nat_scope nat_scope _]"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)"
      }
    ],
    [
      {
        "_type": "sentence",
        "contents": "Theorem mt4\n  : True /\\ True /\\ True /\\ True /\\ True /\\ True /\\ False -> False.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "True /\\ True /\\ True /\\ True /\\ True /\\ True /\\ False ->\nFalse",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "my_tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Print mt4.",
        "messages": [
          {
            "_type": "message",
            "contents": "mt4 = \nbackward_ok\n  (Imp\n     (And Truth\n        (And Truth\n           (And Truth\n              (And Truth\n                 (And Truth (And Truth Falsehood))))))\n     Falsehood) eq_refl (nth_default False [])\n     : True /\\\n       True /\\ True /\\ True /\\ True /\\ True /\\ False ->\n       False"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Theorem mt4'\n  : True /\\ True /\\ True /\\ True /\\ True /\\ True /\\ False -> False.",
        "messages": [],
        "goals": [
          {
            "_type": "goal",
            "name": null,
            "conclusion": "True /\\ True /\\ True /\\ True /\\ True /\\ True /\\ False ->\nFalse",
            "hypotheses": []
          }
        ]
      },
      {
        "_type": "text",
        "contents": "\n  "
      },
      {
        "_type": "sentence",
        "contents": "tauto.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n"
      },
      {
        "_type": "sentence",
        "contents": "Qed.",
        "messages": [],
        "goals": []
      },
      {
        "_type": "text",
        "contents": "\n\n"
      },
      {
        "_type": "sentence",
        "contents": "Print mt4'.",
        "messages": [
          {
            "_type": "message",
            "contents": "mt4' = \nfun\n  H : True /\\\n      True /\\ True /\\ True /\\ True /\\ True /\\ False =>\nand_ind\n  (fun (_ : True)\n     (H1 : True /\\\n           True /\\ True /\\ True /\\ True /\\ False) =>\n   and_ind\n     (fun (_ : True)\n        (H3 : True /\\ True /\\ True /\\ True /\\ False)\n      =>\n      and_ind\n        (fun (_ : True)\n           (H5 : True /\\ True /\\ True /\\ False) =>\n         and_ind\n           (fun (_ : True)\n              (H7 : True /\\ True /\\ False) =>\n            and_ind\n              (fun (_ : True) (H9 : True /\\ False) =>\n               and_ind\n                 (fun (_ : True) (H11 : False) =>\n                  False_ind False H11) H9) H7) H5) H3)\n     H1) H\n     : True /\\\n       True /\\ True /\\ True /\\ True /\\ True /\\ False ->\n       False"
          }
        ],
        "goals": []
      },
      {
        "_type": "text",
        "contents": " (* .unfold *)"
      }
    ]
  ]
}